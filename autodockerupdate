#!/bin/bash

# Webhook Discord (√† remplir)
DISCORD_WEBHOOK="https://discordapp.com/api/webhooks/VOTRE_WEBHOOK_URL"

# Fonction pour envoyer une notification √† Discord
send_discord_notification() {
    local content="$1"

    curl -H "Content-Type: application/json" \
         -d "{\"content\": \"$content\"}" \
         "$DISCORD_WEBHOOK"
}

# Chemin vers les dossiers des conteneurs
CHEMIN="/votre/dossier/docker-apps/"

# V√©rification des arguments
if [ "$#" -ne 1 ]; then
    echo "Liste des conteneurs disponibles sur le serveur"
    echo " "
    ls -l $CHEMIN
    sleep 1
    echo " "
    echo -e "Quel est le conteneur √† mettre √† jour ? \c "
    read var1
else
    var1="$1"
fi

echo "Lancement de la v√©rification de mise √† jour du conteneur"

# Notification de d√©but
send_discord_notification "üîç V√©rification de mise √† jour pour le conteneur **$var1**"

sleep 2

echo " "
# D√©placement dans le r√©pertoire Docker
cd "$CHEMIN" || exit
echo "Acc√®s au r√©pertoire des applis conteneuris√©es"

sleep 2

echo " "
# Placement dans le dossier de l'application
cd "$var1" || exit
echo "Vous √™tes dans le dossier :"
pwd
echo " "

sleep 2

# V√©rification des mises √† jour de l'image docker
echo "V√©rification des mises √† jour de l'image docker"
docker compose pull > pull_output.txt 2>&1
if grep -q "Pull complete" pull_output.txt; then
    echo "Mise √† jour de l'image disponible"
    send_discord_notification "üÜï Nouvelle version de l'image Docker pour **$var1** disponible. D√©but de la mise √† jour."
else
    echo "L'image est d√©j√† √† jour"
    send_discord_notification "‚úÖ L'image Docker pour **$var1** est d√©j√† √† jour. Aucune action n√©cessaire."
    rm pull_output.txt
    exit 0
fi
rm pull_output.txt

echo " "

# Mise √† jour du container avec la derni√®re version
echo "Recr√©ation du conteneur avec la nouvelle image docker"
if docker compose up -d --remove-orphans; then
    send_discord_notification "‚úÖ Conteneur **$var1** recr√©√© avec succ√®s"
else
    send_discord_notification "‚ùå √âchec de la recr√©ation du conteneur **$var1**"
    exit 1
fi
echo " "

# Suppression des images non utilis√©es
echo "Suppression des images docker non utilis√©es"
if docker image prune -f; then
    send_discord_notification "üßπ Nettoyage des images Docker non utilis√©es effectu√©"
else
    send_discord_notification "‚ö†Ô∏è Probl√®me lors du nettoyage des images Docker non utilis√©es"
fi

# Notification de fin
send_discord_notification "üéâ Mise √† jour du conteneur **$var1** termin√©e avec succ√®s"

echo "Mise √† jour termin√©e"
